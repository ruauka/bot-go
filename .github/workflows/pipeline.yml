name: Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
#    needs:
#      - test
#      - lint
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Bot
        uses: docker/build-push-action@v3
        with:
          context: ./bot
          file: ./bot/bot.Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/bot:latest

      - name: Build and Push Scheduler
        uses: docker/build-push-action@v3
        with:
          context: ./scheduler
          file: ./scheduler/scheduler.Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/scheduler:latest

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: build_and_push
    steps:
      - name: SSH connect
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            # Login into DockerHub
            docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
            
            # cd
            cd bot
            
            # Stop docker-compose
            docker-compose stop
                    
            # Remove all images
            docker rmi -f $(docker images -a -q)
            
            # Start docker-compose
            docker-compose up -d